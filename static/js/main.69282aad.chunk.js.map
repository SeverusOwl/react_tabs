{"version":3,"sources":["components/TabsList/TabsList.tsx","App.tsx","index.tsx"],"names":["TabsList","tabs","selectedTab","onChange","className","map","tab","classNames","id","type","name","onClick","title","find","content","App","state","tabsCopy","changeSelect","setState","this","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+PAUaA,EAA4B,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC7D,OACE,qCACE,qBAAKC,UAAU,UAAf,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,wBACEF,UAAWG,IAAW,SAAUD,EAAIE,KAAON,GAAe,YAC1DO,KAAK,SACLC,KAAMJ,EAAIE,GACVG,QAASR,EAJX,SAOGG,EAAIM,OAFAN,EAAIE,SAMf,qBAAKJ,UAAU,cAAf,mBACGH,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIE,KAAON,YAD/B,aACG,EAA0CY,cCtB7Cb,EAAc,CAClB,CAAEO,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAmC3BC,E,4MA/BbC,MAAQ,CACNC,SAAS,GAAD,OAAMhB,GACdC,YAAa,S,EAGfgB,aAAe,SAACZ,GACd,EAAKa,SAAS,CACZjB,YAAaI,K,4CAIjB,WAAU,IAAD,SACP,EAAkCc,KAAKJ,MAA/BC,EAAR,EAAQA,SAAUf,EAAlB,EAAkBA,YAElB,OACE,sBAAKE,UAAU,MAAf,UACE,iEAAwBH,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIE,KAAON,YAApD,aAAwB,EAA0CU,SAClE,8BACE,cAAC,EAAD,CACEX,KAAMgB,EACNf,YAAaA,EACbC,SAAU,SAAAkB,GACR,EAAKH,aAAaG,EAAMC,OAAOZ,kB,GAvB3Ba,IAAMC,WCRxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69282aad.chunk.js","sourcesContent":["import React from 'react';\nimport './TabsList.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTab: string;\n  onChange: (event: any) => void;\n}\n\nexport const TabsList: React.FC<Props> = ({ tabs, selectedTab, onChange }) => {\n  return (\n    <>\n      <div className=\"buttons\">\n        {tabs.map(tab => (\n          <button\n            className={classNames('button', tab.id === selectedTab && 'selected')}\n            type=\"button\"\n            name={tab.id}\n            onClick={onChange}\n            key={tab.id}\n          >\n            {tab.title}\n          </button>\n        ))}\n      </div>\n      <div className=\"tab-content\">\n        {tabs.find(tab => tab.id === selectedTab)?.content}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { TabsList } from './components/TabsList';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    tabsCopy: [...tabs],\n    selectedTab: 'tab-1',\n  };\n\n  changeSelect = (tab: any) => {\n    this.setState({\n      selectedTab: tab,\n    });\n  };\n\n  render() {\n    const { tabsCopy, selectedTab } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected tab is ${tabs.find(tab => tab.id === selectedTab)?.title}`}</h1>\n        <div>\n          <TabsList\n            tabs={tabsCopy}\n            selectedTab={selectedTab}\n            onChange={event => {\n              this.changeSelect(event.target.name);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}